article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
    display: block;
}

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video,
button {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    box-sizing: border-box;
    color: white;
    font-family: 'Gilroy';
}

.dnone {
    display: none;
}

a {
    text-decoration: none;
}

input,
textarea {
    box-sizing: border-box;
}

.free_img {
    width: 0px;
    height: 0px;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
}


html {
    scroll-behavior: smooth;
}

body {
    background: radial-gradient(circle at top right, rgba(26, 28, 37, 1) 0%, rgba(15, 13, 19, 1) 100%);
    // background: radial-gradient(circle at top right, rgba(50, 28, 37, 1) 0%, rgba(15, 13, 19, 1) 100%);
}

.container {
    width: 100%;
    max-width: 1240px;
    margin: 0 auto;
    padding: 0px 12px;
    // padding-left: calc(100% / 8);
    // padding-right: calc(100% / 8);
}

.leftContainer {
    // padding-left: calc(100% / 8);
}

html,
body {
    height: 100%;
    margin: 0;
    overflow-y: auto;
    /* скроллит окно */
    overscroll-behavior-y: none;
    background: #000;
}

/* корневой контейнер — стабильная высота */
.AppWrapper {
    min-height: 100svh;
    padding-bottom: env(safe-area-inset-bottom);
}

/* fallback для старых Safari */
@supports not (height: 100svh) {
    .AppWrapper {
        min-height: calc(var(--vvh, 1vh) * 100);
    }
}

/* если где-то использовали 100vh — заменяем */
.vh-screen {
    min-height: 100svh;
}

@supports not (height: 100svh) {
    .vh-screen {
        min-height: calc(var(--vvh, 1vh) * 100);
    }
}